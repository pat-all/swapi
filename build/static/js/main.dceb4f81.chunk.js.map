{"version":3,"sources":["components/header-button/index.js","components/search/index.js","assests/config/constants.js","assests/config/swapi.config.js","redux-stuff/reducers/error-slice.js","redux-stuff/reducers/category-slice.js","assests/config/data-fetch-service.js","components/header/index.js","components/home/index.js","components/right-section/index.js","components/left-section-item/index.js","components/page-button/index.js","components/pagination/index.js","components/left-section/index.js","components/category/index.js","assests/hooks/usePortal.js","components/portal/index.js","components/loader/index.js","components/error-page/index.js","components/app/index.js","serviceWorker.js","redux-stuff/reducers/index.js","index.js"],"names":["HeaderButton","children","className","Search","useState","query","setQuery","category","useLocation","pathname","split","type","placeholder","value","onChange","e","target","to","regExps","string","number","page","search","notFoundTypes","pageExpTest","str","test","getFirstValue","item","Object","keys","urlBuilder","set","url","filterParams","match","cutUrl","includes","replace","replaceUrl","categories","myUrl","searchResults","searchInCategory","fieldName","fieldValue","length","searchData","pages","singleSearch","result","i","j","push","getSearchQuery","searchExpTest","errorSlice","createSlice","slice","initialState","connectionError","isError","log","notFoundError","undefined","reducers","setConnectionError","state","action","payload","setNotFoundError","actions","categorySlice","isFetching","entities","requestAll","receiveAll","map","name","count","activePage","results","requestPage","receivePage","json","setActivePage","Number","requestItem","receiveItem","cancelFetching","searchRequest","receiveSearchData","forEach","fetchDataFail","headers","fetchCategoriesNamesIfNeeded","dispatch","categoriesNamesCount","shouldFetchCategoriesNames","fetch","then","response","catch","err","console","message","fetchCategoryPageIfNeeded","categoryName","shouldFetchCategoryPage","fetchCategoryPage","fetchCategoryItemIfNeeded","fetchCategoryItem","React","memo","useSelector","errors","categoriesNames","useDispatch","useEffect","exact","activeClassName","key","Home","RightSection","useRouteMatch","useParams","itemKeys","items","style","background","Array","isArray","data","Fragment","isUrlCheck","LeftSectionItem","title","PageButton","clickHandler","onClick","Pagination","pagesCount","showLeftStep","showLeftDots","showRightStep","showRightDots","prevPages","setPrevPages","nextPages","setNextPages","isShownPrevPages","togglePrevPages","isShownNextPages","toggleNextPages","hidePageButtons","nums","clicHandler","newPages","PageNumbers","templateColumns","gridSettings","num","columns","row","Math","floor","column","LeftSection","searchStr","searchQuery","trim","entitiesCount","totalCount","ceil","currentCount","fetchDataBySearch","path","component","usePortal","id","rootElemRef","useRef","rootElem","existingParent","document","querySelector","parentElem","rootContainer","createElement","setAttribute","createRootElement","body","insertBefore","lastElementChild","nextElementSibling","appendChild","current","remove","childNodes","Portal","createPortal","Loader","ErrorPage","classNames","App","Boolean","window","location","hostname","combineReducers","errorsReducer","categoriesReducer","store","configureStore","reducer","rootReducer","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dceb4f81.chunk.js","sourcesContent":["import React from 'react';\n\nimport './index.scss';\n\nconst HeaderButton = ({children}) => (\n    <button className=\"header-item header-button\">\n      {children}\n    </button>\n);\n\nexport default HeaderButton;","import React, { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport HeaderButton from \"../header-button\";\n\nimport \"./index.scss\";\n\nconst Search = () => {\n  const [query, setQuery] = useState(\"\");\n  const { pathname } = useLocation();\n  const category = pathname.split(\"/\")[1];\n  return (\n    <div className=\"search\">\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={query}\n        onChange={e => {\n          setQuery(e.target.value);\n        }}\n      />\n      <HeaderButton>\n        <Link to={`/${category}/?search=${query}`}>Search</Link>\n      </HeaderButton>\n    </div>\n  );\n};\n\nexport default Search;\n","export const SWAPI_BASE_URL = 'https://swapi.co/api'\nconst CORS_BREAK = 'http://cors-anywhere.herokuapp.com/'\n//export const API_BASE = CORS_BREAK + SWAPI_BASE_URL\nexport const API_BASE = '/api'\n\nexport const ITEMS_ON_PAGE = 10\n\nexport const regExps = {\n  string: /[a-z]+/,\n  number: /[0-9]+/,\n  page: /\\?page=[0-9]+/,\n  search: /\\?search=.+/\n}\n\nexport const notFoundTypes = {\n  category: 'CATEGORY',\n  page: 'PAGE'\n}\n\nexport const SEARCH_FIELDS = [\n  \"name\", \"title\", \"model\"\n]","import {\n  SWAPI_BASE_URL,\n  ITEMS_ON_PAGE,\n  regExps,\n  SEARCH_FIELDS,\n  API_BASE\n} from \"./constants\";\n\nexport const pageExpTest = str => regExps.page.test(str);\n\nexport const calcId = (page, i) => (page - 1) * ITEMS_ON_PAGE + i + 1;\n\nexport const calcIdFromUrl = id =>\n  id % ITEMS_ON_PAGE === 0 ? ITEMS_ON_PAGE - 1 : (id % ITEMS_ON_PAGE) - 1;\n\nexport const calcPage = id => Math.ceil(id / ITEMS_ON_PAGE);\n\nexport const getFirstValue = item => {\n  const keys = Object.keys(item);\n  return item[keys[0]];\n};\n\nexport const urlBuilder = (set = {}) => {\n  const { category, page, search, url } = set;\n  if (category && !page && !search) return `${API_BASE}/${category}`;\n  else if (category && page > 0 && !search)\n    return `${API_BASE}/${category}/?page=${page}`;\n  else if (category && !page && search)\n    return `${API_BASE}/${category}/?search=${search}`;\n  else if (url && !category && !page && !search) return `${API_BASE}${url}`;\n  else return API_BASE;\n};\n\nexport const filterParams = (set = {}) => {\n  const { string, number } = set;\n  return string\n    ? string.match(regExps.string)[0]\n    : number\n    ? typeof number === \"number\"\n      ? number\n      : number.match(regExps.number)[0]\n    : null;\n};\n\nexport const getPageFromSearch = searchStr => {\n  if (pageExpTest(searchStr)) {\n    return searchStr.match(regExps.number)[0];\n  } else return 1;\n};\n\nexport const lowDashReplacer = str => str.replace(/_/g, \" \");\n\nexport const cutUrl = str =>\n  str.includes(SWAPI_BASE_URL) ? str.replace(SWAPI_BASE_URL, \"\") : str;\n\nexport const isUrlCheck = str => /https/.test(str)\n\nexport const replaceUrl = (categories, url) => {\n  const myUrl = cutUrl(url)\n  const categoryName = filterParams({ string: myUrl });\n  const category = categories[categoryName]\n  const searchResults = searchInCategory(category, {fieldName: \"url\", fieldValue: url})\n  const item = searchResults.length > 0 ? searchResults[0] : null \n    \n  return item ? getFirstValue(item) : null;\n};\n\nexport const searchInCategory = (category = {}, searchData = {}) => {\n  const { pages } = category;\n  const { fieldName, fieldValue } = searchData;\n  const singleSearch = fieldName === \"url\";\n  const result = [];\n\n  if (pages && fieldName && fieldValue) {\n    for (let i = 0; i < pages.length; i++) {\n      const page = pages[i];\n      if (page) {\n        for (let j = 0; j < page.length; j++) {\n          const item = page[j];\n          if (item[fieldName].includes(fieldValue)) {\n            result.push(item);\n            if (singleSearch) return result;\n          }\n        }\n      }\n      if (singleSearch && result.length > 0) return result;\n    }\n    return result;\n  }\n  return result;\n};\n\nexport const searchData = (set = {}) => {\n  const { categories, category, query } = set;\n  const result = [];\n  if (categories && categories[category] && query) {\n    SEARCH_FIELDS.forEach(field => {\n      const iterResult = searchInCategory(categories[category], {\n        [field]: query\n      });\n      if (iterResult.length > 0) result.push(iterResult);\n    });\n  }\n  return result;\n};\n\nexport const searchExpTest = str => regExps.search.test(str)\n\nexport const getSearchQuery = str => searchExpTest(str) ? str.replace(\"?search=\", \"\") : null\n\nexport const replaceDubleSlash = str => str.replace(\"//\", \"/\")","import { createSlice } from 'redux-starter-kit'\n\nconst errorSlice = createSlice({\n  slice: \"errors\",\n  initialState: { connectionError: {isError: false, log: \"\"}, notFoundError: {isError: false, type: undefined, log: \"\"} },\n  reducers: {\n    setConnectionError(state, action){\n      const { isError, log } = action.payload\n      state.connectionError = { isError, log }\n    },\n    setNotFoundError(state, action){\n      const { isError, log, type } = action.payload\n      state.notFoundError = { isError, log, type }\n    }\n  }\n})\n\nexport const { setConnectionError, setNotFoundError } = errorSlice.actions\n\nexport default errorSlice.reducer","import { createSlice } from \"redux-starter-kit\";\n\nimport {searchInCategory} from \"../../assests/config/swapi.config\"\n\nconst categorySlice = createSlice({\n  slice: \"categories\",\n  initialState: { isFetching: false, entities: {} },\n  reducers: {\n    requestAll(state) {\n      state.isFetching = true;\n    },\n    receiveAll(state, action) {\n      state.isFetching = false;\n      const categoriesNames = Object.keys(action.payload);\n      categoriesNames.map(\n        name => (state.entities[name] = { count: 0, activePage: 1, pages: [], search:{query: \"\", results: []} })\n      );\n    },\n    requestPage(state, action) {},\n    receivePage(state, action) {\n      const { category, json, page } = action.payload;\n      const { count, results } = json;\n      state.entities[category].count = count;\n      state.entities[category].pages[page] = results;\n    },\n    setActivePage(state, action) {\n      const { category, page } = action.payload;\n      state.entities[category].activePage = Number(page);\n    },\n    requestItem(state, action) {},\n    receiveItem(state, action) {\n      const { category, json } = action.payload;\n      if (state.entities[category].pages[0]) {\n        state.entities[category].pages[0].push(json);\n      } else {\n        state.entities[category].pages[0] = [json];\n      }\n    },\n    cancelFetching(state) {\n      state.isFetching = false;\n    },\n    searchRequest(state, action){},\n    receiveSearchData(state, action){\n      const {category, query, json} = action.payload\n      const searchResults = json.results\n      const pages = state.entities[category].pages\n      state.entities[category].search = {query, results: searchResults}\n\n      searchResults.forEach(item => {\n        if(searchInCategory(state.entities[category], {fieldName: \"url\", fieldValue: item.url}).length === 0){\n          if(pages[0]){\n            pages[0].push(item)\n          } else {\n            pages[0] = [item]\n          }\n        }\n      })\n      \n      \n    }\n  }\n});\n\nexport const {\n  requestAll,\n  receiveAll,\n  requestItem,\n  receiveItem,\n  setActivePage,\n  requestPage,\n  receivePage,\n  fetchDataFail,\n  cancelFetching,\n  searchRequest,\n  receiveSearchData,\n} = categorySlice.actions;\n\nexport default categorySlice.reducer;\n","import fetch from \"cross-fetch\";\n\nimport { urlBuilder, filterParams, searchInCategory } from \"./swapi.config\";\n\nimport { setConnectionError } from \"../../redux-stuff/reducers/error-slice\";\n\nimport {\n  requestAll,\n  receiveAll,\n  requestItem,\n  receiveItem,\n  requestPage,\n  receivePage,\n  cancelFetching,\n  searchRequest,\n  receiveSearchData,\n} from \"../../redux-stuff/reducers/category-slice\";\n\nconst headers = {\n  \"Access-Control-Allow-Origin\": \"http://localhost:3000/\",\n  \"Access-Control-Allow-Methods\": \"GET, POST, PUT\",\n  \"Access-Control-Allow-Headers\": \"Content-Type\",\n  \"Content-Type\": \"application/json\"\n};\n\nconst fetchCategoriesNames = () => {\n  return dispatch => {\n    dispatch(requestAll());\n    return fetch(urlBuilder(), {headers})\n      .then(response => response.json())\n      .then(json => dispatch(receiveAll(json)))\n      .catch(err => {\n        console.log(err);\n        dispatch(cancelFetching());\n        dispatch(setConnectionError({ isError: true, log: err.message }));\n        //TODO connection error\n      });\n  };\n};\n\nconst shouldFetchCategoriesNames = state => {\n  const { entities, isFetching } = state;\n  const categoriesNamesCount = Object.keys(entities).length;\n\n  if (0 === categoriesNamesCount && isFetching) return false;\n  else if (0 === categoriesNamesCount && !isFetching) return true;\n  else return false;\n};\n\nexport const fetchCategoriesNamesIfNeeded = state => {\n  return dispatch => {\n    if (shouldFetchCategoriesNames(state)) dispatch(fetchCategoriesNames());\n  };\n};\n\nconst fetchCategoryPage = ({ category, page }) => {\n  return dispatch => {\n    dispatch(requestPage({ category, page }));\n    return fetch(urlBuilder({ category, page }, {headers}))\n      .then(response => response.json())\n      .then(json => dispatch(receivePage({ category, json, page })))\n      .catch(err => {\n        console.log(err);\n        dispatch(cancelFetching());\n        dispatch(setConnectionError({ isError: true, log: err.message }));\n        //TODO connection error\n      });\n  };\n};\n\nconst shouldFetchCategoryPage = (category, page) => {\n  const { pages } = category;\n  if (pages[page] && pages[page].length > 0) return false;\n  else return true;\n};\nexport const fetchCategoryPageIfNeeded = (\n  category,\n  { category: categoryName, page }\n) => {\n  return dispatch => {\n    if (shouldFetchCategoryPage(category, page))\n      dispatch(\n        fetchCategoryPage({\n          category: filterParams({ string: categoryName }),\n          page: filterParams({ number: page })\n        })\n      );\n  };\n};\n\nconst fetchCategoryItem = ({ category, url }) => {\n  return dispatch => {\n    dispatch(requestItem({ url }));\n    return fetch(urlBuilder({ url }))\n      .then(response => response.json())\n      .then(json => dispatch(receiveItem({ category, json })))\n      .catch(err => {\n        console.log(err);\n        dispatch(cancelFetching());\n        dispatch(setConnectionError({ isError: true, log: err.message }));\n        //TODO connection error\n      });\n  };\n};\n\nexport const fetchCategoryItemIfNeeded = (category, categoryName, url) => {\n  return dispatch => {\n    if (searchInCategory(category, {\"url\" : url}).length === 0) {\n      dispatch(fetchCategoryItem({ category: categoryName, url }));\n    }\n  };\n};\n\nexport const fetchDataBySearch = (category, search) => {\n  return dispatch => {\n    if(category && search){\n      dispatch(searchRequest({category, search}))\n      return fetch(urlBuilder({category, search}))\n      .then(response => response.json())\n      .then(json => dispatch(receiveSearchData({category, query: search, json})))\n      .catch(err => {\n        console.log(err)\n      })\n    }\n  }\n}\n","import React, { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n\n//styles\nimport './index.scss'\n\n//components\nimport Search from '../search'\n\nimport { fetchCategoriesNamesIfNeeded } from '../../assests/config/data-fetch-service'\n\nconst Header = () => {\n  const categories = useSelector(state => state.categories)\n  const connectionError = useSelector(state => state.errors.connectionError.isError)\n  const categoriesNames = Object.keys(categories.entities)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if(!connectionError) dispatch(fetchCategoriesNamesIfNeeded(categories))\n  })\n  return (\n    <header>\n      <div className=\"header-section\">\n        <div className=\"header-logo header-item\">SWAPI</div>\n        <div className=\"header-item nav-top\">\n          <NavLink exact to=\"/\" activeClassName=\"selected\">\n            home\n          </NavLink>\n        </div>\n\n        {categoriesNames.map(name => (\n          <div key={name} className=\"header-item nav-top\">\n            <NavLink to={`/${name}`} activeClassName=\"selected\">\n              {name}\n            </NavLink>\n          </div>\n        ))}\n      </div>\n      <div className=\"header-section\">\n        <Search />\n      </div>\n    </header>\n  )\n}\n\nexport default React.memo(Header)\n","import React from 'react';\n\nimport './index.scss';\n\nconst Home = () => (\n  <div>\n    <h2>\n      Hello, this is Home component\n    </h2>\n  </div>\n)\n\nexport default Home;","import React, { useEffect } from \"react\";\nimport { useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { fetchCategoryItemIfNeeded } from \"../../assests/config/data-fetch-service\";\n\nimport {\n  lowDashReplacer,\n  cutUrl,\n  searchInCategory,\n  replaceUrl,\n  isUrlCheck\n} from \"../../assests/config/swapi.config\";\n\nimport \"./index.scss\";\n\nconst RightSection = () => {\n  const { url } = useRouteMatch();\n  const dispatch = useDispatch();\n  const { category: categoryName } = useParams();\n  const { entities, isFetching } = useSelector(state => state.categories);\n  const { connectionError } = useSelector(state => state.errors);\n  const category = entities[categoryName];\n\n  let itemKeys = [];\n  let items = [];\n  let item = null;\n\n  useEffect(() => {\n    if (!isFetching && !connectionError.isError && category && !item) {\n      dispatch(fetchCategoryItemIfNeeded(category, categoryName, url));\n    }\n  });\n\n  if (!isFetching && category && url && !item) {\n    items = searchInCategory(category, { fieldName: \"url\", fieldValue: url });\n    item = items.length > 0 ? items[0] : null;\n    itemKeys = item ? Object.keys(item) : [];\n  }\n  return (\n    <section className=\"right-section\">\n      <div className=\"data-container\">\n        {item &&\n          itemKeys.length > 0 &&\n          itemKeys.map((key, i) => {\n            const style = {\n              background: i % 2 === 0 ? \"#efebe9\" : \"transparent\"\n            };\n            return (\n              <div className=\"row\" key={i} style={style}>\n                <div className=\"left-cell\">{lowDashReplacer(key)}</div>\n                <div className=\"right-cell\">\n                  {Array.isArray(item[key]) ? (\n                    item[key].map((data, i) => (\n                      <React.Fragment key={i}>\n                        <Link to={cutUrl(data)}>\n                          {replaceUrl(entities, data)\n                            ? replaceUrl(entities, data)\n                            : cutUrl(data)}\n                        </Link>{\" \"}\n                        <br></br>\n                      </React.Fragment>\n                    ))\n                  ) : isUrlCheck(item[key]) && cutUrl(item[key]) ? (\n                    <Link to={cutUrl(item[key])}>\n                      {key !== \"url\" && replaceUrl(entities, item[key])\n                        ? replaceUrl(entities, item[key])\n                        : cutUrl(item[key])}\n                    </Link>\n                  ) : (\n                    item[key]\n                  )}\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    </section>\n  );\n};\n\nexport default RightSection;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport './index.scss'\n\nconst LeftSectionItem = ({ title, to }) => {\n  return (\n    <div className=\"left-section-item\">\n      <NavLink to={to} activeClassName=\"selected-left\">\n        <h5>{title}</h5>\n      </NavLink>\n    </div>\n  )\n}\n\nexport default LeftSectionItem\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport './index.scss'\n\nimport {replaceDubleSlash} from \"../../assests/config/swapi.config\"\n\nconst PageButton = ({ children, to, clickHandler, style }) => {\n  console.log(style)\n  return (\n    <button className=\"page-button\" onClick={clickHandler} style={style}>\n      {to ? (<Link to={replaceDubleSlash(to)}>{children}</Link>) : children}\n    </button>\n  )\n}\n\nexport default PageButton\n","import React, { useState } from 'react'\nimport { useRouteMatch } from 'react-router-dom'\n\nimport './index.scss'\n\nimport PageButton from '../page-button'\n\nconst Pagination = ({ page, pagesCount }) => {\n  const showLeftStep = page > 1\n  const showLeftDots = page > 2\n  const showRightStep = page < pagesCount\n  const showRightDots = pagesCount - page > 1\n  const [prevPages, setPrevPages] = useState([])\n  const [nextPages, setNextPages] = useState([])\n  const [isShownPrevPages, togglePrevPages] = useState(false)\n  const [isShownNextPages, toggleNextPages] = useState(false)\n\n  const { url } = useRouteMatch()\n\n  const leftDotsClickHandler = () => {\n    const newPages = []\n    for (let i = 1; i < page; i++) {\n      newPages.push(i)\n    }\n\n    setPrevPages(newPages)\n    togglePrevPages(!isShownPrevPages)\n    toggleNextPages(false)\n  }\n  const rightDotsClickHandler = () => {\n    const newPages = []\n    for (let i = page + 1; i <= pagesCount; i++) {\n      newPages.push(i)\n    }\n    setNextPages(newPages)\n    toggleNextPages(!isShownNextPages)\n    togglePrevPages(false)\n  }\n\n  const hidePageButtons = () => {\n    toggleNextPages(false)\n    togglePrevPages(false)\n  }\n\n  return (\n    <div className=\"pagination\">\n      {prevPages.length > 0 && isShownPrevPages && (\n        <PageNumbers nums={prevPages} clicHandler={hidePageButtons}/>\n      )}\n      {nextPages.length > 0 && isShownNextPages && (\n        <PageNumbers nums={nextPages} clicHandler={hidePageButtons}/>\n      )}\n      <ul>\n        {showLeftStep && (\n          <li onClick={hidePageButtons}>\n            <PageButton to={`${url}/?page=${page - 1}`}>{'<'}</PageButton>\n          </li>\n        )}\n        {showLeftDots && (\n          <li onClick={leftDotsClickHandler}>\n            <PageButton>{'...'}</PageButton>\n          </li>\n        )}\n        <li onClick={hidePageButtons}>\n          <PageButton>{page}</PageButton>\n        </li>\n        {showRightDots && (\n          <li onClick={rightDotsClickHandler}>\n            <PageButton>{'...'}</PageButton>\n          </li>\n        )}\n        {showRightStep && (\n          <li onClick={hidePageButtons}>\n            <PageButton to={`${url}/?page=${page + 1}`}>{'>'}</PageButton>\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default Pagination\n\nconst PageNumbers = ({ nums, clicHandler }) => {\n  const columns = 4\n  const templateColumns = nums.length >= columns ? columns : nums.length\n  const gridSettings = (num, columns)=> {\n    const row = Math.floor(num / (columns + 1)) + 1\n    const column = num % (columns ) === 0 ? columns : num % (columns)\n    return {\n      \"gridColumn\": `${column} / ${column + 1}`,\n      \"gridRow\": `${row} / ${row + 1}`\n    }\n  }\n  const { url } = useRouteMatch()\n  return (\n    <div className=\"page-buttons-container\" style={{\"grid-template-columns\": `repeat(${templateColumns}, 39px)`}}>\n      {nums.map((num, i) => {\n        console.log(i + 1)\n        return (\n            <PageButton key={num} to={`${url}/?page=${num}`} clickHandler={clicHandler} style={gridSettings(i + 1, columns)}>\n              {num}\n            </PageButton>\n        )\n      })}\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams, useLocation } from 'react-router-dom'\n\nimport './index.scss'\n\nimport LeftSectionItem from '../left-section-item'\n\nimport { fetchCategoryPageIfNeeded, fetchDataBySearch } from '../../assests/config/data-fetch-service'\n\nimport { ITEMS_ON_PAGE, notFoundTypes } from '../../assests/config/constants'\n\nimport { setNotFoundError } from '../../redux-stuff/reducers/error-slice'\nimport { setActivePage } from '../../redux-stuff/reducers/category-slice'\nimport {\n  getPageFromSearch,\n  pageExpTest,\n  getFirstValue,\n  cutUrl,\n  getSearchQuery,\n} from '../../assests/config/swapi.config'\nimport Pagination from '../pagination'\n\nconst LeftSection = () => {\n  const { category: categoryName } = useParams()\n  const {pathname, search} = useLocation()\n  const page = `/${categoryName}/` === pathname ? getPageFromSearch(search) : undefined\n  const searchQuery = `/${categoryName}/` === pathname && getSearchQuery(search) && getSearchQuery(search).trim().length > 0 ? getSearchQuery(search).trim() : null\n  const { entities, isFetching } = useSelector(state => state.categories)\n  const {connectionError, notFoundError } = useSelector(state => state.errors)\n  const category = entities[categoryName]\n  const activePage = category ? category.activePage : 1\n  const categoriesNames = Object.keys(entities)\n  const entitiesCount = categoriesNames.length\n  const dispatch = useDispatch()\n  const totalCount = category ? (category.count ? category.count : 0) : 0\n  const pagesCount = totalCount ? Math.ceil(totalCount / ITEMS_ON_PAGE) : 0\n  let items = []\n  let currentCount = 0\n\n  useEffect(() => {\n    if (entitiesCount > 0 && !connectionError.isError) {\n      if(categoriesNames.includes(categoryName)) {\n        if(notFoundError.isError) dispatch(setNotFoundError({isError: false, type: undefined, log: \"\"}))\n        if(!searchQuery){\n          dispatch(\n            fetchCategoryPageIfNeeded(category, {\n              category: categoryName,\n              page: activePage\n            }))\n        } else if(category.search.query !== searchQuery){\n          dispatch(fetchDataBySearch(categoryName, searchQuery))\n        }\n      } else dispatch(setNotFoundError({isError: true, type: notFoundTypes.category, log: categoryName}))\n    }\n  })\n  useEffect(() => {\n    if (!isFetching && !connectionError.isError && category && pageExpTest(search) && !searchQuery && page) {\n      dispatch(setActivePage({category: categoryName, page}))\n    }\n  })\n\n  if (category && category.pages && category.pages[activePage] && !searchQuery) {\n    items = category.pages[activePage]\n    currentCount = items.length\n  } else if(category && category.search && searchQuery && category.search.query === searchQuery){\n    items = category.search.results\n    //currentCount = items.length\n  }\n  return (\n    <section className=\"left-section\">\n      {items.map((item, i) => {\n        return <LeftSectionItem key={i} title={getFirstValue(item)} to={cutUrl(item.url)} />\n      })}\n      {pagesCount > 1 && <Pagination page={activePage} pagesCount={pagesCount} />}\n      {currentCount > 0 && (\n        <div className=\"legend\">\n          {`${(activePage - 1) * ITEMS_ON_PAGE + 1} - ${(activePage - 1) * ITEMS_ON_PAGE +\n            currentCount} of ${totalCount}`}\n        </div>\n      )}\n    </section>\n  )\n}\n\nexport default LeftSection\n","import React from 'react'\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\n\nimport './index.scss'\n\nimport RightSection from '../right-section'\nimport LeftSection from '../left-section'\n\nconst Category = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <section className=\"category-section\">\n      <LeftSection />\n      <Switch>\n        <Route exact path={path}>\n          Select item from left part\n        </Route>\n        <Route path={`${path}/:id`} component={RightSection} />\n      </Switch>\n    </section>\n  )\n}\n\nexport default React.memo(Category)","/**\n * got this code from @link https://www.jayfreestone.com/writing/react-portals-with-hooks/\n */\n\nimport { useRef, useEffect } from 'react';\n\n/**\n * Creates DOM element to be used as React root.\n * @returns {HTMLElement}\n */\nfunction createRootElement(id) {\n  const rootContainer = document.createElement('div');\n  rootContainer.setAttribute('id', id);\n  return rootContainer;\n}\n\n/**\n * Appends element as last child of body.\n * @param {HTMLElement} rootElem \n */\nfunction addRootElement(rootElem) {\n  document.body.insertBefore(\n    rootElem,\n    document.body.lastElementChild.nextElementSibling,\n  );\n}\n\n/**\n * Hook to create a React Portal.\n * Automatically handles creating and tearing-down the root elements (no SRR\n * makes this trivial), so there is no need to ensure the parent target already\n * exists.\n * @example\n * const target = usePortal(id, [id]);\n * return createPortal(children, target);\n * @param {String} id The id of the target container, e.g 'modal' or 'spotlight'\n * @returns {HTMLElement} The DOM node to use as the Portal target.\n */\nfunction usePortal(id) {\n  const rootElemRef = useRef(null);\n\n  useEffect(function setupElement() {\n    // Look for existing target dom element to append to\n    const existingParent = document.querySelector(`#${id}`);\n    // Parent is either a new root or the existing dom element\n    const parentElem = existingParent || createRootElement(id);\n\n    // If there is no existing DOM element, add a new one.\n    if (!existingParent) {\n      addRootElement(parentElem);\n    }\n\n    // Add the detached element to the parent\n    parentElem.appendChild(rootElemRef.current);\n\n    return function removeElement() {\n      rootElemRef.current.remove();\n      if (parentElem.childNodes.length === -1) {\n        parentElem.remove();\n      }\n    };\n  }/*, []*/);\n\n  /**\n   * It's important we evaluate this lazily:\n   * - We need first render to contain the DOM element, so it shouldn't happen\n   *   in useEffect. We would normally put this in the constructor().\n   * - We can't do 'const rootElemRef = useRef(document.createElement('div))',\n   *   since this will run every single render (that's a lot).\n   * - We want the ref to consistently point to the same DOM element and only\n   *   ever run once.\n   * @link https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n   */\n  function getRootElem() {\n    if (!rootElemRef.current) {\n      rootElemRef.current = document.createElement('div');\n    }\n    return rootElemRef.current;\n  }\n\n  return getRootElem();\n}\n\nexport default usePortal;","/**\n * got this code from @link https://www.jayfreestone.com/writing/react-portals-with-hooks/\n */\n\nimport React from 'react'\nimport { createPortal } from 'react-dom';\n\nimport usePortal from '../../assests/hooks/usePortal';\n\nimport './index.scss'\n\n/**\n * @example\n * <Portal>\n *   <p>Thinking with portals</p>\n * </Portal>\n */\nconst Portal = ({ id, children }) => {\n  const target = usePortal(id);\n  return createPortal(\n    <div className='modal'> {/*this <div> added for modal styles */}\n      {children}\n    </div>,\n    target,\n  );\n};\n\nexport default Portal;\n","import React from 'react'\n\nimport './index.scss'\n\nconst Loader = () => (\n    <div className=\"loading\">\n      <div className=\"dot d1\"></div>\n      <div className=\"dot d2\"></div>\n      <div className=\"dot d3\"></div>\n    </div>\n)\n\nexport default Loader","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\n\nimport './index.scss'\n\nconst ErrorPage = () => {\n  const categories = useSelector(state => Object.keys(state.categories.entities))\n  const {connectionError, notFoundError} = useSelector(state => state.errors)\n  const classNames = connectionError.isError ? '.error-page .error-modal' : '.error-page'\n \n  return (\n    <div className={classNames}>\n      {connectionError.isError && (<h2>{connectionError.log}</h2>)}\n      {!connectionError.isError && notFoundError.isError && (\n        <React.Fragment>\n        <h3>{`Error: ${notFoundError.log} is NOT FOUND, try:`}</h3>\n        <ul>\n          {categories.map((category, i) => (\n            <li key={i}><Link to={`/${category}/`}>{`/${category}/`}</Link></li>\n          ))}\n        </ul>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}\n\nexport default ErrorPage","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport './index.scss'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\n\n//components\nimport Header from '../header'\nimport Home from '../home'\nimport Category from '../category'\nimport Portal from '../portal'\nimport Loader from '../loader'\nimport ErrorPage from '../error-page'\n\nconst App = () => {\n  const categories = useSelector(state => state.categories)\n  const { notFoundError, connectionError } = useSelector(state => state.errors)\n  const { isFetching } = categories\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/:category\">\n            {notFoundError.isError ? <ErrorPage /> : <Category />}\n          </Route>\n        </Switch>\n      </Router>\n      {isFetching && !connectionError.isError && (\n        <Portal id=\"modal-root\">\n          <Loader />\n        </Portal>\n      )}\n      {connectionError.isError && (\n        <Portal id=\"modal-root\">\n          <ErrorPage />\n        </Portal>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux'\n\nimport categoriesReducer from './category-slice'\nimport errorsReducer from './error-slice'\n\nexport default combineReducers({\n  errors: errorsReducer,\n  categories: categoriesReducer,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nimport { configureStore } from \"redux-starter-kit\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./redux-stuff/reducers\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}